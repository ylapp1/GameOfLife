<?php
/**
 * @file
 * @version 0.1
 * @copyright 2018 CN-Consult GmbH
 * @author Yannick Lapp <yannick.lapp@cn-consult.eu>
 */

use PHPUnit\Framework\TestCase;
use Util\Shell\ShellExecutor;

/**
 * Checks whether the ShellExecutor class works as expected.
 * This test works because exec() and system() were overridden in testboot.php for the Util namespace.
 */
/*class ShellExecutorTest extends TestCase
{
    /**
     * Checks whether a command can be successfully executed.
     * See testboot.php for the overridden exec() function
     *
     * @covers \Util\ShellExecutor::__construct()
     * @covers \Util\ShellExecutor::executeCommand()
     /
    public function testCanExecuteCommand()
    {
        $shellExecutor = new ShellExecutor();

        $returnValue = $shellExecutor->executeCommand("hello", true);
        $this->assertEquals(1, $returnValue);
    }

    /**
     * Checks whether the output can be redirected.
     *
     * @param String $_command The command
     * @param String $_expectedCommand The expected command as generated by the ShellExecutor
     *
     * @dataProvider redirectOutputProvider()
     *
     * @covers \Util\ShellExecutor::__construct()
     * @covers \Util\ShellExecutor::executeCommand()
     * @covers \Util\ShellExecutor::getOutputHideRedirect()
     /
    public function testCanRedirectOutput(String $_command, String $_expectedCommand)
    {
        $shellExecutor = new ShellExecutor();
        $returnValue = $shellExecutor->executeCommand($_command, true);
        $this->assertEquals($_expectedCommand, $returnValue);
    }

    /**
     * DataProvider for ShellExecutorTest::testCanRedirectOutput().
     *
     * @return array The test values in the format array(osName, command, expectedCommand)
     /
    public function redirectOutputProvider()
    {
        return array(
            "Windows" => array("hello", "hello 2>NUL"),
            "Linux" => array("hello", "hello 2>/dev/null"),
            "Other" => array("hello", "hello 2>output.txt")
        );
    }
}*/
